#!/bin/sh
set -e

printUsage() {
  cat << EOF
Usage: ${0##*/} [-u|--url url] [-c|--checksum checksum] [-C|--cmd command] -- [args]
A script that can download a file, verify its checksum and execute it
    -h, --help      Print this usage page
    -u, --url       Url of the file you want to check
    -c, --checksum  SHA256 checksum to check against
    -C, --cmd       Interpreter to execute the file with
    args            Arguments for the command you want to execute
EOF
}

# parse arguments
url=""
checksum=""
cmd=""

while [ "$#" -gt 0 ] ; do
  case "$1" in
    -h|--help)
        printUsage
        exit 0
        ;;
    -u|--url)
      url=$2
      shift 2
      ;;
    -c|--checksum)
      checksum=$2
      shift 2
      ;;
    -C|--cmd)
      cmd=$2
      shift 2
      ;;
    --)
      shift
      break
      ;;
    *)
      shift
      break
      ;;
  esac
done

# determine temporary file
if command -v mktemp >/dev/null 2>/dev/null ; then
  tmpfile=$(mktemp)
else
  # fallback
  tmpfile=${TMPDIR:-/tmp}/runck-$$-$(date +%S)
fi

if [ -t 0 ]; then
    if [ "x${url}" = "x" ]; then
        echo "Interactive mode and no url was specified"
        echo ""
        printUsage
        exit 1
    fi
fi

cleanup() {
  rm -f "${tmpfile}"
}

# some shells treat EXIT as a catch all, others execute it during normal exits from the shell, requiring to handle all signals explicitly.
trap cleanup EXIT INT TERM

# download the content or pass stdin through
retrieve() {
  if [ "x${url}" = "x" ] ; then
    cat
  elif command -v curl >/dev/null 2>/dev/null ; then
    if tty -s ; then
      curl_options="-sSLf#"
    else
      curl_options="-sSLf"
    fi
    curl ${curl_options} "${url}"
  else
    wget -O- -q "${url}"
  fi
}

# validate checksum
validate() {
  if [ "x${checksum}" != "x" ] ; then
    checksum=$(echo ${checksum} | sed 's/^sha256://')
    echo "CK=$checksum" 1>&2
    echo "${checksum}  ${tmpfile}" | sha256sum -c - 1>&2
  fi
}

# run
launch() {
  # make executable if not running it via any command/shell
  if [ "x${cmd}" = "x" ] ; then
    chmod 0755 "${tmpfile}"
  fi

  ${cmd} "${tmpfile}" "$@"
}

retrieve >${tmpfile}
validate
launch "$@"
